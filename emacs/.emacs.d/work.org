* UI
** Declutter
#+BEGIN_SRC emacs-lisp
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
#+END_SRC
** Line wrapping
#+BEGIN_SRC emacs-lisp
(global-visual-line-mode 1)
#+END_SRC
* Controls
** Single line scrolling
Move down or up one line at a time with M-n and M-p.
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "M-n") (kbd "C-u 1 C-v"))
(global-set-key (kbd "M-p") (kbd "C-u 1 M-v"))
#+END_SRC
** Killing & yanking
#+BEGIN_SRC emacs-lisp
(autoload 'zap-up-to-char "misc"
  "Kill up to, but not including ARGth occurrence of CHAR." t)
(setq mouse-yank-at-point t)
#+END_SRC
** Ido
Enable and make useful:
#+BEGIN_SRC emacs-lisp
(ido-mode t)
(setq ido-enable-flex-matching t)
#+END_SRC
* Custom file
#+BEGIN_SRC emacs-lisp
(setq custom-file "~/.emacs.d/custom.el")
(load custom-file)
#+END_SRC
* Org
** Basic setup
#+BEGIN_SRC emacs-lisp
(define-key global-map "\C-ca" 'org-agenda)

(setq org-todo-keywords '((sequence "TODO(t)" "STARTED(s!)" "WAITING(w@/!)" "|" "DONE(d!)" "CANCELLED(c@)")))

(setq org-todo-keyword-faces
      '(
	("STARTED" . "orange")
	("WAITING" . "purple")
	("CANCELLED" . "brown")))
#+END_SRC
** Clocking
#+BEGIN_SRC emacs-lisp
(setq org-clock-into-drawer t)
#+END_SRC
** State dependencies
Automatically update todo state based on subtree states.
#+BEGIN_SRC emacs-lisp
(setq org-enforce-todo-dependencies t)

(defun org-summary-todo (n-done n-not-done)
  "Switch entry to DONE when all subentries are done, to TODO otherwise."
  (let (org-log-done org-log-states)   ; turn off logging
    (org-todo (cond ((= n-not-done 0) "DONE")
		    ((= n-done 0) "TODO")
		    (t "STARTED")))))

(add-hook 'org-after-todo-statistics-hook 'org-summary-todo)
#+END_SRC
